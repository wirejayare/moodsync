{"ast":null,"code":"var _jsxFileName = \"/Users/jasonwire/moodsync/moodsync-project/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport SpotifyCallback from './components/SpotifyCallback';\nimport PinterestCallback from './components/PinterestCallback';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [spotifyUser, setSpotifyUser] = useState(null);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [pinterestUser, setPinterestUser] = useState(null);\n  const [pinterestToken, setPinterestToken] = useState(null);\n\n  // Load saved authentication state on app start\n  useEffect(() => {\n    const savedSpotifyUser = localStorage.getItem('moodsync_spotify_user');\n    const savedSpotifyToken = localStorage.getItem('moodsync_spotify_token');\n    const savedPinterestUser = localStorage.getItem('moodsync_pinterest_user');\n    const savedPinterestToken = localStorage.getItem('moodsync_pinterest_token');\n    if (savedSpotifyUser && savedSpotifyToken) {\n      try {\n        setSpotifyUser(JSON.parse(savedSpotifyUser));\n        setSpotifyToken(savedSpotifyToken);\n        console.log('Restored Spotify session');\n      } catch (error) {\n        console.error('Error restoring Spotify session:', error);\n        // Clear corrupted data\n        localStorage.removeItem('moodsync_spotify_user');\n        localStorage.removeItem('moodsync_spotify_token');\n      }\n    }\n    if (savedPinterestUser && savedPinterestToken) {\n      try {\n        setPinterestUser(JSON.parse(savedPinterestUser));\n        setPinterestToken(savedPinterestToken);\n        console.log('Restored Pinterest session');\n      } catch (error) {\n        console.error('Error restoring Pinterest session:', error);\n        // Clear corrupted data\n        localStorage.removeItem('moodsync_pinterest_user');\n        localStorage.removeItem('moodsync_pinterest_token');\n      }\n    }\n  }, []);\n  const handleSpotifyAuth = (token, user) => {\n    setSpotifyToken(token);\n    setSpotifyUser(user);\n\n    // Persist to localStorage\n    localStorage.setItem('moodsync_spotify_token', token);\n    localStorage.setItem('moodsync_spotify_user', JSON.stringify(user));\n    console.log('Spotify authenticated and saved:', user.display_name);\n  };\n  const handlePinterestAuth = (token, user) => {\n    setPinterestToken(token);\n    setPinterestUser(user);\n\n    // Persist to localStorage\n    localStorage.setItem('moodsync_pinterest_token', token);\n    localStorage.setItem('moodsync_pinterest_user', JSON.stringify(user));\n    console.log('Pinterest authenticated and saved:', user.username);\n  };\n  const handleLogout = service => {\n    if (service === 'spotify') {\n      setSpotifyUser(null);\n      setSpotifyToken(null);\n      localStorage.removeItem('moodsync_spotify_user');\n      localStorage.removeItem('moodsync_spotify_token');\n    } else if (service === 'pinterest') {\n      setPinterestUser(null);\n      setPinterestToken(null);\n      localStorage.removeItem('moodsync_pinterest_user');\n      localStorage.removeItem('moodsync_pinterest_token');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            spotifyUser: spotifyUser,\n            spotifyToken: spotifyToken,\n            onSpotifyAuth: handleSpotifyAuth,\n            pinterestUser: pinterestUser,\n            pinterestToken: pinterestToken,\n            onPinterestAuth: handlePinterestAuth,\n            onLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/callback\",\n          element: /*#__PURE__*/_jsxDEV(SpotifyCallback, {\n            onSpotifyAuth: handleSpotifyAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/pinterest-callback\",\n          element: /*#__PURE__*/_jsxDEV(PinterestCallback, {\n            onPinterestAuth: handlePinterestAuth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"02515kixjx0AeKXkZlHCwTFuCQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Home","SpotifyCallback","PinterestCallback","jsxDEV","_jsxDEV","App","_s","spotifyUser","setSpotifyUser","spotifyToken","setSpotifyToken","pinterestUser","setPinterestUser","pinterestToken","setPinterestToken","savedSpotifyUser","localStorage","getItem","savedSpotifyToken","savedPinterestUser","savedPinterestToken","JSON","parse","console","log","error","removeItem","handleSpotifyAuth","token","user","setItem","stringify","display_name","handlePinterestAuth","username","handleLogout","service","children","className","path","element","onSpotifyAuth","onPinterestAuth","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jasonwire/moodsync/moodsync-project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport SpotifyCallback from './components/SpotifyCallback';\nimport PinterestCallback from './components/PinterestCallback';\n\nfunction App() {\n  const [spotifyUser, setSpotifyUser] = useState(null);\n  const [spotifyToken, setSpotifyToken] = useState(null);\n  const [pinterestUser, setPinterestUser] = useState(null);\n  const [pinterestToken, setPinterestToken] = useState(null);\n\n  // Load saved authentication state on app start\n  useEffect(() => {\n    const savedSpotifyUser = localStorage.getItem('moodsync_spotify_user');\n    const savedSpotifyToken = localStorage.getItem('moodsync_spotify_token');\n    const savedPinterestUser = localStorage.getItem('moodsync_pinterest_user');\n    const savedPinterestToken = localStorage.getItem('moodsync_pinterest_token');\n\n    if (savedSpotifyUser && savedSpotifyToken) {\n      try {\n        setSpotifyUser(JSON.parse(savedSpotifyUser));\n        setSpotifyToken(savedSpotifyToken);\n        console.log('Restored Spotify session');\n      } catch (error) {\n        console.error('Error restoring Spotify session:', error);\n        // Clear corrupted data\n        localStorage.removeItem('moodsync_spotify_user');\n        localStorage.removeItem('moodsync_spotify_token');\n      }\n    }\n\n    if (savedPinterestUser && savedPinterestToken) {\n      try {\n        setPinterestUser(JSON.parse(savedPinterestUser));\n        setPinterestToken(savedPinterestToken);\n        console.log('Restored Pinterest session');\n      } catch (error) {\n        console.error('Error restoring Pinterest session:', error);\n        // Clear corrupted data\n        localStorage.removeItem('moodsync_pinterest_user');\n        localStorage.removeItem('moodsync_pinterest_token');\n      }\n    }\n  }, []);\n\n  const handleSpotifyAuth = (token, user) => {\n    setSpotifyToken(token);\n    setSpotifyUser(user);\n    \n    // Persist to localStorage\n    localStorage.setItem('moodsync_spotify_token', token);\n    localStorage.setItem('moodsync_spotify_user', JSON.stringify(user));\n    \n    console.log('Spotify authenticated and saved:', user.display_name);\n  };\n\n  const handlePinterestAuth = (token, user) => {\n    setPinterestToken(token);\n    setPinterestUser(user);\n    \n    // Persist to localStorage\n    localStorage.setItem('moodsync_pinterest_token', token);\n    localStorage.setItem('moodsync_pinterest_user', JSON.stringify(user));\n    \n    console.log('Pinterest authenticated and saved:', user.username);\n  };\n\n  const handleLogout = (service) => {\n    if (service === 'spotify') {\n      setSpotifyUser(null);\n      setSpotifyToken(null);\n      localStorage.removeItem('moodsync_spotify_user');\n      localStorage.removeItem('moodsync_spotify_token');\n    } else if (service === 'pinterest') {\n      setPinterestUser(null);\n      setPinterestToken(null);\n      localStorage.removeItem('moodsync_pinterest_user');\n      localStorage.removeItem('moodsync_pinterest_token');\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          <Route \n            path=\"/\" \n            element={\n              <Home \n                spotifyUser={spotifyUser}\n                spotifyToken={spotifyToken}\n                onSpotifyAuth={handleSpotifyAuth}\n                pinterestUser={pinterestUser}\n                pinterestToken={pinterestToken}\n                onPinterestAuth={handlePinterestAuth}\n                onLogout={handleLogout}\n              />\n            } \n          />\n          <Route \n            path=\"/callback\" \n            element={\n              <SpotifyCallback \n                onSpotifyAuth={handleSpotifyAuth}\n              />\n            } \n          />\n          <Route \n            path=\"/pinterest-callback\" \n            element={\n              <PinterestCallback \n                onPinterestAuth={handlePinterestAuth}\n              />\n            } \n          />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}