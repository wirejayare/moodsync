{"ast":null,"code":"var _jsxFileName = \"/Users/jasonwire/moodsync/moodsync-project/frontend/src/components/PinterestBoardSelector.js\",\n  _s = $RefreshSig$();\n// src/components/PinterestBoardSelector.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PinterestBoardSelector = ({\n  pinterestToken,\n  pinterestUser,\n  onBoardSelect,\n  selectedBoard\n}) => {\n  _s();\n  var _selectedBoard$owner;\n  const [boards, setBoards] = useState([]);\n  const [filteredBoards, setFilteredBoards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n  useEffect(() => {\n    if (pinterestToken && pinterestUser) {\n      fetchUserBoards();\n    }\n  }, [pinterestToken, pinterestUser]);\n  useEffect(() => {\n    let filtered = boards.filter(board => board.name.toLowerCase().includes(searchTerm.toLowerCase()) || board.description && board.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'pins':\n          return b.pin_count - a.pin_count;\n        case 'recent':\n          return new Date(b.created_at) - new Date(a.created_at);\n        case 'name':\n        default:\n          return a.name.localeCompare(b.name);\n      }\n    });\n    setFilteredBoards(filtered);\n  }, [boards, searchTerm, sortBy]);\n  const fetchUserBoards = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://moodsync-backend-sdbe.onrender.com/api/pinterest/boards', {\n        headers: {\n          'Authorization': `Bearer ${pinterestToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        setBoards(data.boards);\n      } else {\n        throw new Error(data.message || 'Failed to fetch boards');\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleBoardClick = async board => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`https://moodsync-backend-sdbe.onrender.com/api/pinterest/boards/${board.id}`, {\n        headers: {\n          'Authorization': `Bearer ${pinterestToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        onBoardSelect(data.board);\n        setIsExpanded(false);\n      } else {\n        throw new Error(data.message || 'Failed to fetch board details');\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (!pinterestToken || !pinterestUser) return null;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"apple-glass pinterest-board-selector\",\n    \"aria-label\": \"Pinterest Board Selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"pbs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pbs-header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pbs-title\",\n          children: \"\\uD83D\\uDCCC Select Your Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), selectedBoard ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pbs-selected\",\n          \"aria-live\": \"polite\",\n          children: [\"Selected: \", selectedBoard.name, \" (\", selectedBoard.pin_count, \" pins)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pbs-subtitle\",\n          children: [\"Choose from \", boards.length, \" boards\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `pbs-toggle-btn${isExpanded ? ' expanded' : ''}`,\n        onClick: () => setIsExpanded(!isExpanded),\n        disabled: isLoading,\n        \"aria-expanded\": isExpanded,\n        \"aria-controls\": \"pbs-board-list\",\n        children: isLoading ? '⏳' : isExpanded ? '▲ Hide' : '▼ Browse'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pbs-error\",\n      role: \"alert\",\n      children: [\"Error: \", error, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"pbs-retry\",\n        onClick: fetchUserBoards,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pbs-board-browser\",\n      id: \"pbs-board-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pbs-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"pbs-search\",\n          placeholder: \"Search boards...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          \"aria-label\": \"Search boards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"pbs-sort\",\n          value: sortBy,\n          onChange: e => setSortBy(e.target.value),\n          \"aria-label\": \"Sort boards\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"name\",\n            children: \"Sort by Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pins\",\n            children: \"Sort by Pin Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"recent\",\n            children: \"Sort by Recent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pbs-board-grid\",\n        children: filteredBoards.length === 0 && !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pbs-empty\",\n          children: searchTerm ? `No boards found matching \"${searchTerm}\"` : 'No boards found. Create some boards on Pinterest first!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pbs-board-list\",\n          children: filteredBoards.map(board => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `pbs-board-card${(selectedBoard === null || selectedBoard === void 0 ? void 0 : selectedBoard.id) === board.id ? ' selected' : ''}`,\n            onClick: () => handleBoardClick(board),\n            tabIndex: 0,\n            role: \"button\",\n            \"aria-pressed\": (selectedBoard === null || selectedBoard === void 0 ? void 0 : selectedBoard.id) === board.id,\n            \"aria-label\": `Select board ${board.name}`,\n            children: [board.thumbnails && board.thumbnails.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pbs-thumbnails\",\n              children: board.thumbnails.slice(0, 6).map((thumb, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pbs-thumb\",\n                style: {\n                  backgroundImage: `url(${thumb.image_url})`\n                },\n                title: thumb.title\n              }, thumb.id || index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pbs-thumb-empty\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uD83D\\uDCCC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pbs-board-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pbs-board-name\",\n                children: board.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this), board.description && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pbs-board-desc\",\n                children: board.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pbs-board-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\uD83D\\uDCCC \", board.pin_count, \" pins\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pbs-board-meta\",\n                children: [board.follower_count > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\uD83D\\uDC65 \", board.follower_count]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 27\n                }, this), board.privacy === 'private' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"\\uD83D\\uDD12\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this)]\n          }, board.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), filteredBoards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pbs-footer\",\n        children: [\"Showing \", filteredBoards.length, \" of \", boards.length, \" boards\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), selectedBoard && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pbs-selected-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pbs-selected-title\",\n        children: [\"\\u2705 Ready to Analyze: \", selectedBoard.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pbs-selected-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD83D\\uDCCC \", selectedBoard.pin_count, \" pins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD83D\\uDC65 \", selectedBoard.follower_count, \" followers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedBoard.privacy === 'private' ? '🔒 Private' : '🔓 Public'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\uD83D\\uDC64 @\", (_selectedBoard$owner = selectedBoard.owner) === null || _selectedBoard$owner === void 0 ? void 0 : _selectedBoard$owner.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), selectedBoard.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pbs-selected-desc\",\n        children: [\"\\\"\", selectedBoard.description, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(PinterestBoardSelector, \"2HJKPLCASfoDuoyBT2ev/kBI4eU=\");\n_c = PinterestBoardSelector;\nexport default PinterestBoardSelector;\nvar _c;\n$RefreshReg$(_c, \"PinterestBoardSelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PinterestBoardSelector","pinterestToken","pinterestUser","onBoardSelect","selectedBoard","_s","_selectedBoard$owner","boards","setBoards","filteredBoards","setFilteredBoards","isLoading","setIsLoading","error","setError","isExpanded","setIsExpanded","searchTerm","setSearchTerm","sortBy","setSortBy","fetchUserBoards","filtered","filter","board","name","toLowerCase","includes","description","sort","a","b","pin_count","Date","created_at","localeCompare","response","fetch","headers","ok","Error","status","data","json","success","message","handleBoardClick","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","disabled","role","type","placeholder","value","onChange","e","target","map","tabIndex","thumbnails","slice","thumb","index","style","backgroundImage","image_url","title","follower_count","privacy","owner","username","_c","$RefreshReg$"],"sources":["/Users/jasonwire/moodsync/moodsync-project/frontend/src/components/PinterestBoardSelector.js"],"sourcesContent":["// src/components/PinterestBoardSelector.js\nimport React, { useState, useEffect } from 'react';\n\nconst PinterestBoardSelector = ({ \n  pinterestToken, \n  pinterestUser, \n  onBoardSelect,\n  selectedBoard \n}) => {\n  const [boards, setBoards] = useState([]);\n  const [filteredBoards, setFilteredBoards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortBy, setSortBy] = useState('name');\n\n  useEffect(() => {\n    if (pinterestToken && pinterestUser) {\n      fetchUserBoards();\n    }\n  }, [pinterestToken, pinterestUser]);\n\n  useEffect(() => {\n    let filtered = boards.filter(board => \n      board.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      (board.description && board.description.toLowerCase().includes(searchTerm.toLowerCase()))\n    );\n\n    filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'pins':\n          return b.pin_count - a.pin_count;\n        case 'recent':\n          return new Date(b.created_at) - new Date(a.created_at);\n        case 'name':\n        default:\n          return a.name.localeCompare(b.name);\n      }\n    });\n\n    setFilteredBoards(filtered);\n  }, [boards, searchTerm, sortBy]);\n\n  const fetchUserBoards = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://moodsync-backend-sdbe.onrender.com/api/pinterest/boards', {\n        headers: {\n          'Authorization': `Bearer ${pinterestToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        setBoards(data.boards);\n      } else {\n        throw new Error(data.message || 'Failed to fetch boards');\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleBoardClick = async (board) => {\n    try {\n      setIsLoading(true);\n      const response = await fetch(`https://moodsync-backend-sdbe.onrender.com/api/pinterest/boards/${board.id}`, {\n        headers: {\n          'Authorization': `Bearer ${pinterestToken}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.success) {\n        onBoardSelect(data.board);\n        setIsExpanded(false);\n      } else {\n        throw new Error(data.message || 'Failed to fetch board details');\n      }\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (!pinterestToken || !pinterestUser) return null;\n\n  return (\n    <section className=\"apple-glass pinterest-board-selector\" aria-label=\"Pinterest Board Selector\">\n      {/* Header Section */}\n      <header className=\"pbs-header\">\n        <div className=\"pbs-header-info\">\n          <h2 className=\"pbs-title\">📌 Select Your Board</h2>\n          {selectedBoard ? (\n            <div className=\"pbs-selected\" aria-live=\"polite\">\n              Selected: {selectedBoard.name} ({selectedBoard.pin_count} pins)\n            </div>\n          ) : (\n            <div className=\"pbs-subtitle\">\n              Choose from {boards.length} boards\n            </div>\n          )}\n        </div>\n        <button\n          className={`pbs-toggle-btn${isExpanded ? ' expanded' : ''}`}\n          onClick={() => setIsExpanded(!isExpanded)}\n          disabled={isLoading}\n          aria-expanded={isExpanded}\n          aria-controls=\"pbs-board-list\"\n        >\n          {isLoading ? '⏳' : isExpanded ? '▲ Hide' : '▼ Browse'}\n        </button>\n      </header>\n\n      {/* Error Display */}\n      {error && (\n        <div className=\"pbs-error\" role=\"alert\">\n          Error: {error}\n          <button className=\"pbs-retry\" onClick={fetchUserBoards}>\n            Retry\n          </button>\n        </div>\n      )}\n\n      {/* Expanded Board Browser */}\n      {isExpanded && (\n        <div className=\"pbs-board-browser\" id=\"pbs-board-list\">\n          {/* Search and Sort Controls */}\n          <div className=\"pbs-controls\">\n            <input\n              type=\"text\"\n              className=\"pbs-search\"\n              placeholder=\"Search boards...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              aria-label=\"Search boards\"\n            />\n            <select\n              className=\"pbs-sort\"\n              value={sortBy}\n              onChange={(e) => setSortBy(e.target.value)}\n              aria-label=\"Sort boards\"\n            >\n              <option value=\"name\">Sort by Name</option>\n              <option value=\"pins\">Sort by Pin Count</option>\n              <option value=\"recent\">Sort by Recent</option>\n            </select>\n          </div>\n\n          {/* Board Grid Container */}\n          <div className=\"pbs-board-grid\">\n            {filteredBoards.length === 0 && !isLoading ? (\n              <div className=\"pbs-empty\">\n                {searchTerm ? `No boards found matching \"${searchTerm}\"` : 'No boards found. Create some boards on Pinterest first!'}\n              </div>\n            ) : (\n              <div className=\"pbs-board-list\">\n                {filteredBoards.map((board) => (\n                  <div\n                    key={board.id}\n                    className={`pbs-board-card${selectedBoard?.id === board.id ? ' selected' : ''}`}\n                    onClick={() => handleBoardClick(board)}\n                    tabIndex={0}\n                    role=\"button\"\n                    aria-pressed={selectedBoard?.id === board.id}\n                    aria-label={`Select board ${board.name}`}\n                  >\n                    {/* Board Thumbnails */}\n                    {board.thumbnails && board.thumbnails.length > 0 ? (\n                      <div className=\"pbs-thumbnails\">\n                        {board.thumbnails.slice(0, 6).map((thumb, index) => (\n                          <div\n                            key={thumb.id || index}\n                            className=\"pbs-thumb\"\n                            style={{ backgroundImage: `url(${thumb.image_url})` }}\n                            title={thumb.title}\n                          />\n                        ))}\n                      </div>\n                    ) : (\n                      <div className=\"pbs-thumb-empty\">\n                        <span>📌</span>\n                      </div>\n                    )}\n                    {/* Board Info */}\n                    <div className=\"pbs-board-info\">\n                      <div className=\"pbs-board-name\">{board.name}</div>\n                      {board.description && (\n                        <div className=\"pbs-board-desc\">{board.description}</div>\n                      )}\n                    </div>\n                    {/* Board Stats */}\n                    <div className=\"pbs-board-stats\">\n                      <span>📌 {board.pin_count} pins</span>\n                      <div className=\"pbs-board-meta\">\n                        {board.follower_count > 0 && (\n                          <span>👥 {board.follower_count}</span>\n                        )}\n                        {board.privacy === 'private' && (\n                          <span>🔒</span>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n          {/* Stats Footer */}\n          {filteredBoards.length > 0 && (\n            <div className=\"pbs-footer\">\n              Showing {filteredBoards.length} of {boards.length} boards\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Selected Board Display */}\n      {selectedBoard && (\n        <div className=\"pbs-selected-board\">\n          <div className=\"pbs-selected-title\">\n            ✅ Ready to Analyze: {selectedBoard.name}\n          </div>\n          <div className=\"pbs-selected-grid\">\n            <div>📌 {selectedBoard.pin_count} pins</div>\n            <div>👥 {selectedBoard.follower_count} followers</div>\n            <div>{selectedBoard.privacy === 'private' ? '🔒 Private' : '🔓 Public'}</div>\n            <div>👤 @{selectedBoard.owner?.username}</div>\n          </div>\n          {selectedBoard.description && (\n            <div className=\"pbs-selected-desc\">\n              \"{selectedBoard.description}\"\n            </div>\n          )}\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default PinterestBoardSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}